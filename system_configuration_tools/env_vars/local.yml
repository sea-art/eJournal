---

# Domain settings.
baselink: http://localhost:8080
api_url: http://localhost:8000

# Git settings.
setup_git_repo: true

# Database settings.
db_user: "{{ application_name }}"
db_name: "{{ application_name }}"
db_password: password
db_host: localhost
db_port: 5432


# Sentry settings
sentry_dsn: ""
sentry_organization_slug: ejournal-test
sentry_project_slug: ejournal-test

# LTI settings.
lti_secret: 4339900ae5861f3086861ea492772864
lti_key: 0cd500938a8e7414ccd31899710c98ce


# Gunicorn settings.
# For the number of workers, a good rule to follow is 2 x number of CPUs + 1
gunicorn_num_workers: "{{ (2 * ansible_processor_cores + 1) }}"

# Setting this to 1 will restart the Gunicorn process each time you make a request, basically reloading the code.
# Very handy when developing. Set to 0 for unlimited requests (default).
gunicorn_max_requests: 1


# RabbitMQ settings.
rabbitmq_server_name: "rabbitmq-local-server"

rabbitmq_admin_user: admin
rabbitmq_admin_password: password

rabbitmq_application_vhost: "{{ application_name }}"
rabbitmq_application_user: "{{ application_name }}"
rabbitmq_application_password: password


# Celery settings.
celery_num_workers: 2


# Application settings.
django_settings_file: "{{ project_name }}.settings.local"
django_secret_key: "@a4c3cpgfe0@8s!be=23d5+3e30vyj7!q%tolqpewafp^-@=br"

broker_url: "amqp://localhost"

run_django_db_migrations: true
run_django_collectstatic: true


# Nginx settings.
ssl_crt: placeholder
ssl_key: placeholder
