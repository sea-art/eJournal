from flask import Flask, request
import os
import hmac
import hashlib
import subprocess

app = Flask(__name__)
secret = b"e42210ea3fea24da5fff6d0baa86c2094615f3d6"
busy = False

def run(command, cwd='/home/ubuntu/eJournal', env_path='home/ubuntu/eJournal/venv/bin', func=subprocess.check_call):
    env = os.environ.copy()
    env["PATH"] = env_path + ':' + env["PATH"]
    return func(command.split(), cwd=cwd, env=env)

@app.route('/', methods=['POST','GET'])
@app.route('/github', methods=['POST','GET'])
@app.route('/github-webhook', methods=['POST','GET'])
def index():
    global busy
    if request.method == 'GET':
        return "Server is running"
    if request.method == 'POST':

        data = request.get_json()
        dig = 'sha1=' + hmac.new(secret, msg=request.data, digestmod=hashlib.sha1).hexdigest()
        if hmac.compare_digest(dig, request.headers['X-Hub-Signature']):
            available_branches = ['develop', 'enhancement/specify-branch-ansible']
            branch = data['ref'][len('refs/heads/'):]
            if branch in available_branches and not busy:
                busy = True
                run('git fetch')
                run('git checkout origin/{}'.format(branch))
                run('make run-ansible-deploy no_become=true branch=origin/{}'.format(branch))
                busy = False
                return '{"success": "true", "description": "deploying develop to demo"}'

            return '{"success": "true", "description": "doing nothing"}'

        return '{"success": "false"}'

if __name__ == "__main__":
    # context = ('ssl.cert', 'ssl.key')
    app.run(host='0.0.0.0', port=5000)
